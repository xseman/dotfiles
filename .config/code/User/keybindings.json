[
    {
        "command": "workbench.action.navigateBack",
        "key": "alt+left"
    },
    {
        "command": "workbench.action.navigateForward",
        "key": "alt+right"
    },
    {
        "command": "workbench.action.files.saveAll",
        "key": "ctrl+alt+s"
    },
    {
        "command": "workbench.action.terminal.focusNext",
        "key": "ctrl+shift+right",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.focusPrevious",
        "key": "ctrl+shift+left",
        "when": "terminalFocus"
    },
    {
        "command": "typescriptHero.imports.organize",
        "key": "ctrl+alt+o",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.deleteLines",
        "key": "ctrl+shift+d",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "command": "-workbench.action.terminal.scrollUp",
        "key": "ctrl+shift+up",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.toggleMaximizedPanel",
        "key": "ctrl+shift+up",
        "when": "!editorTextFocus"
    },
    {
        "command": "-editor.action.insertCursorBelow",
        "key": "shift+alt+down",
        "when": "editorTextFocus"
    },
    {
        "command": "-editor.action.insertCursorAbove",
        "key": "shift+alt+up",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.copyLinesDownAction",
        "key": "shift+alt+down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.copyLinesDownAction",
        "key": "ctrl+shift+alt+down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.copyLinesUpAction",
        "key": "shift+alt+up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.copyLinesUpAction",
        "key": "ctrl+shift+alt+up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "workbench.action.terminal.toggleTerminal",
        "key": "ctrl+`",
        "when": "!terminalFocus"
    },
    {
        "command": "workbench.action.closePanel",
        "key": "ctrl+`",
        "when": "activePanel || terminalFocus"
    },
    {
        "command": "workbench.action.terminal.new",
        "key": "ctrl+shift+`",
        "when": "terminalFocus"
    },
    {
        "command": "workbench.action.terminal.toggleTerminal",
        "key": "ctrl+;",
        "when": "!terminalFocus"
    },
    {
        "command": "workbench.action.closePanel",
        "key": "ctrl+;",
        "when": "activePanel || terminalFocus"
    },
    {
        "command": "workbench.action.terminal.new",
        "key": "ctrl+shift+;",
        "when": "terminalFocus"
    },
    {
        "command": "editor.action.jumpToBracket",
        "key": "ctrl+\\",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.terminal.split",
        "key": "ctrl+\\",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.focusNextPane",
        "key": "ctrl+space right",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.focusPreviousPane",
        "key": "ctrl+space left",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.resizePaneLeft",
        "key": "ctrl+shift+left",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.resizePaneRight",
        "key": "ctrl+shift+right",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.focusNext",
        "key": "shift+right",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.terminal.focusPrevious",
        "key": "shift+left",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditor",
        "key": "ctrl+tab",
        "when": "!inEditorsPicker"
    },
    /**
     * Removed
     */
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "-workbench.action.togglePanel",
        "key": "ctrl+j"
    },
    {
        "command": "-editor.action.jumpToBracket",
        "key": "ctrl+shift+\\",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+a",
        "command": "-testing.debugAll"
    },
    {
        "key": "ctrl+; ctrl+e",
        "command": "-testing.debugFailTests"
    },
    {
        "key": "ctrl+; ctrl+l",
        "command": "-testing.debugLastRun"
    },
    {
        "key": "ctrl+; ctrl+c",
        "command": "-testing.debugAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+f",
        "command": "-testing.debugCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+m",
        "command": "-testing.openOutputPeek"
    },
    {
        "key": "ctrl+; ctrl+r",
        "command": "-testing.refreshTests",
        "when": "testing.canRefresh"
    },
    {
        "key": "ctrl+; e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "ctrl+; l",
        "command": "-testing.reRunLastRun"
    },
    {
        "key": "ctrl+; a",
        "command": "-testing.runAll"
    },
    {
        "key": "ctrl+; c",
        "command": "-testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; f",
        "command": "-testing.runCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+o",
        "command": "-testing.showMostRecentOutput",
        "when": "testing.hasAnyResults"
    },
    {
        "key": "ctrl+; ctrl+i",
        "command": "-testing.toggleInlineTestOutput"
    },
    {
        "key": "ctrl+; ctrl+x",
        "command": "-testing.cancelRun"
    },
]
